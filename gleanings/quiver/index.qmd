---
title: "Quiver plots in Python"
---

##  

Let us frist start with a first-order differential equation (DE) , $dy/dx = f(x,y)$. A **direction field** for the DE is a collection of line segments (or arrows) where the slope of the line segment at a point equals the derivative at that point. For
example if you have the DE $dy/dx = x â€” y$ then the
segment drawn at (1,2) would have slope -1; the segment drawn at the
origin would have slope 0; and so on. This is what the direction field
looks like for this particular DE if you drew segments at various points
for *x* and *y* between -5 and 5:

![](images/clipboard-1500280270.png)

```{python}


import numpy as np
import matplotlib.pyplot as plt

# Slope function dy/dx = f(x, y)
def f(x, y):
    return x - y

# Create grid
x = np.linspace(-5, 5, 10)
y = np.linspace(-5, 5, 10)
X, Y = np.meshgrid(x, y)

# Compute slope at each point
S = f(X, Y)

# Convert slope to direction vectors (dx, dy)
U = 1                   # dx
V = S                   # dy = slope * dx

# Normalize for better visualization
N = np.sqrt(U**2 + V**2)
U, V = U/N, V/N

# Plot slope field
plt.figure(figsize=(6, 6))
plt.quiver(X, Y, U, V, color='purple', angles='xy')
plt.xlabel("x")
plt.ylabel("y")
plt.title("Slope Field for dy/dx = x - y")
plt.show()



```
